ARG APP_EXECUTABLE=protomesh

FROM docker.io/library/golang:1.20-bullseye

ARG APP_EXECUTABLE

WORKDIR /app

RUN GO111MODULE=on go install github.com/bufbuild/buf/cmd/buf@v1.19.0
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.30.0
RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0

RUN go install github.com/kyleconroy/sqlc/cmd/sqlc@v1.18.0

RUN CGO_ENABLED=0 go install -ldflags "-s -w -extldflags '-static'" github.com/go-delve/delve/cmd/dlv@latest

COPY go.mod ./
COPY go.sum ./

RUN go mod download

COPY . ./

RUN buf generate
RUN sqlc generate

RUN CGO_ENABLED=0 GOOS=linux go build -a -gcflags "all=-N -l" -installsuffix cgo -o ${APP_EXECUTABLE} ./cmd

RUN mv ${APP_EXECUTABLE} /usr/bin/

COPY ./provider/postgres/schema /var/${APP_EXECUTABLE}/postgres/schema

ENTRYPOINT [ "/go/bin/dlv", "--listen=:4000", "--headless=true", "--log=true", "--accept-multiclient", "--api-version=2", "exec" ]

CMD [ "${APP_EXECUTABLE}" ]