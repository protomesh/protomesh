// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: api/types/v1/service_mesh.proto

package typesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceMesh_TransportProtocol int32

const (
	ServiceMesh_TRANSPORT_PROTOCOL_UNDEFINED ServiceMesh_TransportProtocol = 0
	ServiceMesh_TRANSPORT_PROTOCOL_TCP       ServiceMesh_TransportProtocol = 1
	ServiceMesh_TRANSPORT_PROTOCOL_UDP       ServiceMesh_TransportProtocol = 2
)

// Enum value maps for ServiceMesh_TransportProtocol.
var (
	ServiceMesh_TransportProtocol_name = map[int32]string{
		0: "TRANSPORT_PROTOCOL_UNDEFINED",
		1: "TRANSPORT_PROTOCOL_TCP",
		2: "TRANSPORT_PROTOCOL_UDP",
	}
	ServiceMesh_TransportProtocol_value = map[string]int32{
		"TRANSPORT_PROTOCOL_UNDEFINED": 0,
		"TRANSPORT_PROTOCOL_TCP":       1,
		"TRANSPORT_PROTOCOL_UDP":       2,
	}
)

func (x ServiceMesh_TransportProtocol) Enum() *ServiceMesh_TransportProtocol {
	p := new(ServiceMesh_TransportProtocol)
	*p = x
	return p
}

func (x ServiceMesh_TransportProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceMesh_TransportProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_api_types_v1_service_mesh_proto_enumTypes[0].Descriptor()
}

func (ServiceMesh_TransportProtocol) Type() protoreflect.EnumType {
	return &file_api_types_v1_service_mesh_proto_enumTypes[0]
}

func (x ServiceMesh_TransportProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceMesh_TransportProtocol.Descriptor instead.
func (ServiceMesh_TransportProtocol) EnumDescriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 0}
}

type ServiceMesh_ApplicationProtocol int32

const (
	ServiceMesh_APPLICATION_PROTOCOL_UNDEFINED ServiceMesh_ApplicationProtocol = 0
	ServiceMesh_APPLICATION_PROTOCOL_HTTP1     ServiceMesh_ApplicationProtocol = 1
	ServiceMesh_APPLICATION_PROTOCOL_HTTP2     ServiceMesh_ApplicationProtocol = 2
)

// Enum value maps for ServiceMesh_ApplicationProtocol.
var (
	ServiceMesh_ApplicationProtocol_name = map[int32]string{
		0: "APPLICATION_PROTOCOL_UNDEFINED",
		1: "APPLICATION_PROTOCOL_HTTP1",
		2: "APPLICATION_PROTOCOL_HTTP2",
	}
	ServiceMesh_ApplicationProtocol_value = map[string]int32{
		"APPLICATION_PROTOCOL_UNDEFINED": 0,
		"APPLICATION_PROTOCOL_HTTP1":     1,
		"APPLICATION_PROTOCOL_HTTP2":     2,
	}
)

func (x ServiceMesh_ApplicationProtocol) Enum() *ServiceMesh_ApplicationProtocol {
	p := new(ServiceMesh_ApplicationProtocol)
	*p = x
	return p
}

func (x ServiceMesh_ApplicationProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceMesh_ApplicationProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_api_types_v1_service_mesh_proto_enumTypes[1].Descriptor()
}

func (ServiceMesh_ApplicationProtocol) Type() protoreflect.EnumType {
	return &file_api_types_v1_service_mesh_proto_enumTypes[1]
}

func (x ServiceMesh_ApplicationProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceMesh_ApplicationProtocol.Descriptor instead.
func (ServiceMesh_ApplicationProtocol) EnumDescriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 1}
}

type ServiceMesh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceMesh) Reset() {
	*x = ServiceMesh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh) ProtoMessage() {}

func (x *ServiceMesh) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh.ProtoReflect.Descriptor instead.
func (*ServiceMesh) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0}
}

type ServiceMesh_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Node:
	//
	//	*ServiceMesh_Node_HttpIngress
	//	*ServiceMesh_Node_Service
	//	*ServiceMesh_Node_RoutingPolicy
	Node isServiceMesh_Node_Node `protobuf_oneof:"node"`
}

func (x *ServiceMesh_Node) Reset() {
	*x = ServiceMesh_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_Node) ProtoMessage() {}

func (x *ServiceMesh_Node) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_Node.ProtoReflect.Descriptor instead.
func (*ServiceMesh_Node) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 0}
}

func (m *ServiceMesh_Node) GetNode() isServiceMesh_Node_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (x *ServiceMesh_Node) GetHttpIngress() *ServiceMesh_HttpIngress {
	if x, ok := x.GetNode().(*ServiceMesh_Node_HttpIngress); ok {
		return x.HttpIngress
	}
	return nil
}

func (x *ServiceMesh_Node) GetService() *ServiceMesh_Service {
	if x, ok := x.GetNode().(*ServiceMesh_Node_Service); ok {
		return x.Service
	}
	return nil
}

func (x *ServiceMesh_Node) GetRoutingPolicy() *ServiceMesh_RoutingPolicy {
	if x, ok := x.GetNode().(*ServiceMesh_Node_RoutingPolicy); ok {
		return x.RoutingPolicy
	}
	return nil
}

type isServiceMesh_Node_Node interface {
	isServiceMesh_Node_Node()
}

type ServiceMesh_Node_HttpIngress struct {
	HttpIngress *ServiceMesh_HttpIngress `protobuf:"bytes,1,opt,name=http_ingress,json=httpIngress,proto3,oneof"`
}

type ServiceMesh_Node_Service struct {
	Service *ServiceMesh_Service `protobuf:"bytes,2,opt,name=service,proto3,oneof"`
}

type ServiceMesh_Node_RoutingPolicy struct {
	RoutingPolicy *ServiceMesh_RoutingPolicy `protobuf:"bytes,3,opt,name=routing_policy,json=routingPolicy,proto3,oneof"`
}

func (*ServiceMesh_Node_HttpIngress) isServiceMesh_Node_Node() {}

func (*ServiceMesh_Node_Service) isServiceMesh_Node_Node() {}

func (*ServiceMesh_Node_RoutingPolicy) isServiceMesh_Node_Node() {}

type ServiceMesh_HttpFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//
	//	*ServiceMesh_HttpFilter_Cors_
	//	*ServiceMesh_HttpFilter_HealthCheck_
	//	*ServiceMesh_HttpFilter_GrpcWeb_
	//	*ServiceMesh_HttpFilter_JwtAuthn_
	Filter isServiceMesh_HttpFilter_Filter `protobuf_oneof:"filter"`
}

func (x *ServiceMesh_HttpFilter) Reset() {
	*x = ServiceMesh_HttpFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_HttpFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_HttpFilter) ProtoMessage() {}

func (x *ServiceMesh_HttpFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_HttpFilter.ProtoReflect.Descriptor instead.
func (*ServiceMesh_HttpFilter) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 1}
}

func (m *ServiceMesh_HttpFilter) GetFilter() isServiceMesh_HttpFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ServiceMesh_HttpFilter) GetCors() *ServiceMesh_HttpFilter_Cors {
	if x, ok := x.GetFilter().(*ServiceMesh_HttpFilter_Cors_); ok {
		return x.Cors
	}
	return nil
}

func (x *ServiceMesh_HttpFilter) GetHealthCheck() *ServiceMesh_HttpFilter_HealthCheck {
	if x, ok := x.GetFilter().(*ServiceMesh_HttpFilter_HealthCheck_); ok {
		return x.HealthCheck
	}
	return nil
}

func (x *ServiceMesh_HttpFilter) GetGrpcWeb() *ServiceMesh_HttpFilter_GrpcWeb {
	if x, ok := x.GetFilter().(*ServiceMesh_HttpFilter_GrpcWeb_); ok {
		return x.GrpcWeb
	}
	return nil
}

func (x *ServiceMesh_HttpFilter) GetJwtAuthn() *ServiceMesh_HttpFilter_JwtAuthn {
	if x, ok := x.GetFilter().(*ServiceMesh_HttpFilter_JwtAuthn_); ok {
		return x.JwtAuthn
	}
	return nil
}

type isServiceMesh_HttpFilter_Filter interface {
	isServiceMesh_HttpFilter_Filter()
}

type ServiceMesh_HttpFilter_Cors_ struct {
	Cors *ServiceMesh_HttpFilter_Cors `protobuf:"bytes,1,opt,name=cors,proto3,oneof"`
}

type ServiceMesh_HttpFilter_HealthCheck_ struct {
	HealthCheck *ServiceMesh_HttpFilter_HealthCheck `protobuf:"bytes,2,opt,name=health_check,json=healthCheck,proto3,oneof"`
}

type ServiceMesh_HttpFilter_GrpcWeb_ struct {
	GrpcWeb *ServiceMesh_HttpFilter_GrpcWeb `protobuf:"bytes,3,opt,name=grpc_web,json=grpcWeb,proto3,oneof"`
}

type ServiceMesh_HttpFilter_JwtAuthn_ struct {
	JwtAuthn *ServiceMesh_HttpFilter_JwtAuthn `protobuf:"bytes,4,opt,name=jwt_authn,json=jwtAuthn,proto3,oneof"`
}

func (*ServiceMesh_HttpFilter_Cors_) isServiceMesh_HttpFilter_Filter() {}

func (*ServiceMesh_HttpFilter_HealthCheck_) isServiceMesh_HttpFilter_Filter() {}

func (*ServiceMesh_HttpFilter_GrpcWeb_) isServiceMesh_HttpFilter_Filter() {}

func (*ServiceMesh_HttpFilter_JwtAuthn_) isServiceMesh_HttpFilter_Filter() {}

// HttpIngress represents an ingress proxy
type ServiceMesh_HttpIngress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// XDS cluster name: must be the same of the envoy config to be matched by
	// xDS server
	XdsClusterName string `protobuf:"bytes,1,opt,name=xds_cluster_name,json=xdsClusterName,proto3" json:"xds_cluster_name,omitempty"`
	// Ingress name (used as route config name for the route specifier)
	IngressName string `protobuf:"bytes,2,opt,name=ingress_name,json=ingressName,proto3" json:"ingress_name,omitempty"`
	// Ingress port to listen for incoming requests
	ListenPort int32 `protobuf:"varint,3,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// Http filters to apply to the ingress listener
	HttpFilters []*ServiceMesh_HttpFilter `protobuf:"bytes,4,rep,name=http_filters,json=httpFilters,proto3" json:"http_filters,omitempty"`
}

func (x *ServiceMesh_HttpIngress) Reset() {
	*x = ServiceMesh_HttpIngress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_HttpIngress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_HttpIngress) ProtoMessage() {}

func (x *ServiceMesh_HttpIngress) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_HttpIngress.ProtoReflect.Descriptor instead.
func (*ServiceMesh_HttpIngress) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ServiceMesh_HttpIngress) GetXdsClusterName() string {
	if x != nil {
		return x.XdsClusterName
	}
	return ""
}

func (x *ServiceMesh_HttpIngress) GetIngressName() string {
	if x != nil {
		return x.IngressName
	}
	return ""
}

func (x *ServiceMesh_HttpIngress) GetListenPort() int32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *ServiceMesh_HttpIngress) GetHttpFilters() []*ServiceMesh_HttpFilter {
	if x != nil {
		return x.HttpFilters
	}
	return nil
}

type ServiceMesh_Http1Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceMesh_Http1Options) Reset() {
	*x = ServiceMesh_Http1Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_Http1Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_Http1Options) ProtoMessage() {}

func (x *ServiceMesh_Http1Options) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_Http1Options.ProtoReflect.Descriptor instead.
func (*ServiceMesh_Http1Options) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 3}
}

type ServiceMesh_Http2Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxConcurrentStreams int32 `protobuf:"varint,1,opt,name=max_concurrent_streams,json=maxConcurrentStreams,proto3" json:"max_concurrent_streams,omitempty"`
}

func (x *ServiceMesh_Http2Options) Reset() {
	*x = ServiceMesh_Http2Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_Http2Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_Http2Options) ProtoMessage() {}

func (x *ServiceMesh_Http2Options) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_Http2Options.ProtoReflect.Descriptor instead.
func (*ServiceMesh_Http2Options) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ServiceMesh_Http2Options) GetMaxConcurrentStreams() int32 {
	if x != nil {
		return x.MaxConcurrentStreams
	}
	return 0
}

// Service represents a downstream target for envoy (Cluster)
type ServiceMesh_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName    string                          `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Instances      []*ServiceMesh_Service_Instance `protobuf:"bytes,2,rep,name=instances,proto3" json:"instances,omitempty"`
	ConnectTimeout *durationpb.Duration            `protobuf:"bytes,3,opt,name=connect_timeout,json=connectTimeout,proto3" json:"connect_timeout,omitempty"`
	// Types that are assignable to InstanceApplicationProtocolOptions:
	//
	//	*ServiceMesh_Service_InstanceHttp1Options
	//	*ServiceMesh_Service_InstanceHttp2Options
	InstanceApplicationProtocolOptions isServiceMesh_Service_InstanceApplicationProtocolOptions `protobuf_oneof:"instance_application_protocol_options"`
}

func (x *ServiceMesh_Service) Reset() {
	*x = ServiceMesh_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_Service) ProtoMessage() {}

func (x *ServiceMesh_Service) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_Service.ProtoReflect.Descriptor instead.
func (*ServiceMesh_Service) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 5}
}

func (x *ServiceMesh_Service) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceMesh_Service) GetInstances() []*ServiceMesh_Service_Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *ServiceMesh_Service) GetConnectTimeout() *durationpb.Duration {
	if x != nil {
		return x.ConnectTimeout
	}
	return nil
}

func (m *ServiceMesh_Service) GetInstanceApplicationProtocolOptions() isServiceMesh_Service_InstanceApplicationProtocolOptions {
	if m != nil {
		return m.InstanceApplicationProtocolOptions
	}
	return nil
}

func (x *ServiceMesh_Service) GetInstanceHttp1Options() *ServiceMesh_Http1Options {
	if x, ok := x.GetInstanceApplicationProtocolOptions().(*ServiceMesh_Service_InstanceHttp1Options); ok {
		return x.InstanceHttp1Options
	}
	return nil
}

func (x *ServiceMesh_Service) GetInstanceHttp2Options() *ServiceMesh_Http2Options {
	if x, ok := x.GetInstanceApplicationProtocolOptions().(*ServiceMesh_Service_InstanceHttp2Options); ok {
		return x.InstanceHttp2Options
	}
	return nil
}

type isServiceMesh_Service_InstanceApplicationProtocolOptions interface {
	isServiceMesh_Service_InstanceApplicationProtocolOptions()
}

type ServiceMesh_Service_InstanceHttp1Options struct {
	InstanceHttp1Options *ServiceMesh_Http1Options `protobuf:"bytes,4,opt,name=instance_http1_options,json=instanceHttp1Options,proto3,oneof"`
}

type ServiceMesh_Service_InstanceHttp2Options struct {
	InstanceHttp2Options *ServiceMesh_Http2Options `protobuf:"bytes,5,opt,name=instance_http2_options,json=instanceHttp2Options,proto3,oneof"`
}

func (*ServiceMesh_Service_InstanceHttp1Options) isServiceMesh_Service_InstanceApplicationProtocolOptions() {
}

func (*ServiceMesh_Service_InstanceHttp2Options) isServiceMesh_Service_InstanceApplicationProtocolOptions() {
}

// Represents a routing policy for the control plane (Envoy Virtual Host)
type ServiceMesh_RoutingPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyName string                             `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	Routes     []*ServiceMesh_RoutingPolicy_Route `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	Cors       *ServiceMesh_RoutingPolicy_Cors    `protobuf:"bytes,3,opt,name=cors,proto3" json:"cors,omitempty"`
	// XDS cluster name: must be the same of the envoy config to be matched by
	// xDS server
	XdsClusterName string `protobuf:"bytes,4,opt,name=xds_cluster_name,json=xdsClusterName,proto3" json:"xds_cluster_name,omitempty"`
}

func (x *ServiceMesh_RoutingPolicy) Reset() {
	*x = ServiceMesh_RoutingPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_RoutingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_RoutingPolicy) ProtoMessage() {}

func (x *ServiceMesh_RoutingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_RoutingPolicy.ProtoReflect.Descriptor instead.
func (*ServiceMesh_RoutingPolicy) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 6}
}

func (x *ServiceMesh_RoutingPolicy) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *ServiceMesh_RoutingPolicy) GetRoutes() []*ServiceMesh_RoutingPolicy_Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *ServiceMesh_RoutingPolicy) GetCors() *ServiceMesh_RoutingPolicy_Cors {
	if x != nil {
		return x.Cors
	}
	return nil
}

func (x *ServiceMesh_RoutingPolicy) GetXdsClusterName() string {
	if x != nil {
		return x.XdsClusterName
	}
	return ""
}

type ServiceMesh_Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Edge:
	//
	//	*ServiceMesh_Edge_AwsLambdaGrpcEdge
	Edge isServiceMesh_Edge_Edge `protobuf_oneof:"edge"`
}

func (x *ServiceMesh_Edge) Reset() {
	*x = ServiceMesh_Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_Edge) ProtoMessage() {}

func (x *ServiceMesh_Edge) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_Edge.ProtoReflect.Descriptor instead.
func (*ServiceMesh_Edge) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 7}
}

func (m *ServiceMesh_Edge) GetEdge() isServiceMesh_Edge_Edge {
	if m != nil {
		return m.Edge
	}
	return nil
}

func (x *ServiceMesh_Edge) GetAwsLambdaGrpcEdge() *ServiceMesh_AwsLambdaGrpcEdge {
	if x, ok := x.GetEdge().(*ServiceMesh_Edge_AwsLambdaGrpcEdge); ok {
		return x.AwsLambdaGrpcEdge
	}
	return nil
}

type isServiceMesh_Edge_Edge interface {
	isServiceMesh_Edge_Edge()
}

type ServiceMesh_Edge_AwsLambdaGrpcEdge struct {
	AwsLambdaGrpcEdge *ServiceMesh_AwsLambdaGrpcEdge `protobuf:"bytes,1,opt,name=aws_lambda_grpc_edge,json=awsLambdaGrpcEdge,proto3,oneof"`
}

func (*ServiceMesh_Edge_AwsLambdaGrpcEdge) isServiceMesh_Edge_Edge() {}

type ServiceMesh_AwsLambdaGrpcEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullMethodName string `protobuf:"bytes,1,opt,name=full_method_name,json=fullMethodName,proto3" json:"full_method_name,omitempty"`
	FunctionName   string `protobuf:"bytes,2,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	Qualifier      string `protobuf:"bytes,3,opt,name=qualifier,proto3" json:"qualifier,omitempty"`
}

func (x *ServiceMesh_AwsLambdaGrpcEdge) Reset() {
	*x = ServiceMesh_AwsLambdaGrpcEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_AwsLambdaGrpcEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_AwsLambdaGrpcEdge) ProtoMessage() {}

func (x *ServiceMesh_AwsLambdaGrpcEdge) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_AwsLambdaGrpcEdge.ProtoReflect.Descriptor instead.
func (*ServiceMesh_AwsLambdaGrpcEdge) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 8}
}

func (x *ServiceMesh_AwsLambdaGrpcEdge) GetFullMethodName() string {
	if x != nil {
		return x.FullMethodName
	}
	return ""
}

func (x *ServiceMesh_AwsLambdaGrpcEdge) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *ServiceMesh_AwsLambdaGrpcEdge) GetQualifier() string {
	if x != nil {
		return x.Qualifier
	}
	return ""
}

type ServiceMesh_HttpFilter_HealthCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ServiceMesh_HttpFilter_HealthCheck) Reset() {
	*x = ServiceMesh_HttpFilter_HealthCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_HttpFilter_HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_HttpFilter_HealthCheck) ProtoMessage() {}

func (x *ServiceMesh_HttpFilter_HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_HttpFilter_HealthCheck.ProtoReflect.Descriptor instead.
func (*ServiceMesh_HttpFilter_HealthCheck) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *ServiceMesh_HttpFilter_HealthCheck) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ServiceMesh_HttpFilter_Cors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceMesh_HttpFilter_Cors) Reset() {
	*x = ServiceMesh_HttpFilter_Cors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_HttpFilter_Cors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_HttpFilter_Cors) ProtoMessage() {}

func (x *ServiceMesh_HttpFilter_Cors) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_HttpFilter_Cors.ProtoReflect.Descriptor instead.
func (*ServiceMesh_HttpFilter_Cors) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 1, 1}
}

type ServiceMesh_HttpFilter_GrpcWeb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceMesh_HttpFilter_GrpcWeb) Reset() {
	*x = ServiceMesh_HttpFilter_GrpcWeb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_HttpFilter_GrpcWeb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_HttpFilter_GrpcWeb) ProtoMessage() {}

func (x *ServiceMesh_HttpFilter_GrpcWeb) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_HttpFilter_GrpcWeb.ProtoReflect.Descriptor instead.
func (*ServiceMesh_HttpFilter_GrpcWeb) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 1, 2}
}

type ServiceMesh_HttpFilter_JwtAuthn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Providers []*ServiceMesh_HttpFilter_JwtAuthn_Provider `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
	Rules     []*ServiceMesh_HttpFilter_JwtAuthn_Rule     `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *ServiceMesh_HttpFilter_JwtAuthn) Reset() {
	*x = ServiceMesh_HttpFilter_JwtAuthn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_HttpFilter_JwtAuthn) ProtoMessage() {}

func (x *ServiceMesh_HttpFilter_JwtAuthn) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_HttpFilter_JwtAuthn.ProtoReflect.Descriptor instead.
func (*ServiceMesh_HttpFilter_JwtAuthn) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 1, 3}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn) GetProviders() []*ServiceMesh_HttpFilter_JwtAuthn_Provider {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *ServiceMesh_HttpFilter_JwtAuthn) GetRules() []*ServiceMesh_HttpFilter_JwtAuthn_Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeaderName string `protobuf:"bytes,1,opt,name=header_name,json=headerName,proto3" json:"header_name,omitempty"`
	ClaimName  string `protobuf:"bytes,2,opt,name=claim_name,json=claimName,proto3" json:"claim_name,omitempty"`
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader) Reset() {
	*x = ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader) ProtoMessage() {}

func (x *ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader.ProtoReflect.Descriptor instead.
func (*ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 1, 3, 0}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader) GetHeaderName() string {
	if x != nil {
		return x.HeaderName
	}
	return ""
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader) GetClaimName() string {
	if x != nil {
		return x.ClaimName
	}
	return ""
}

type ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HttpUri     string               `protobuf:"bytes,1,opt,name=http_uri,json=httpUri,proto3" json:"http_uri,omitempty"`
	ClusterName string               `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Timeout     *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks) Reset() {
	*x = ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks) ProtoMessage() {}

func (x *ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks.ProtoReflect.Descriptor instead.
func (*ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 1, 3, 1}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks) GetHttpUri() string {
	if x != nil {
		return x.HttpUri
	}
	return ""
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type ServiceMesh_HttpFilter_JwtAuthn_FromHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeaderName  string `protobuf:"bytes,1,opt,name=header_name,json=headerName,proto3" json:"header_name,omitempty"`
	ValuePrefix string `protobuf:"bytes,2,opt,name=value_prefix,json=valuePrefix,proto3" json:"value_prefix,omitempty"`
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_FromHeader) Reset() {
	*x = ServiceMesh_HttpFilter_JwtAuthn_FromHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_FromHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_HttpFilter_JwtAuthn_FromHeader) ProtoMessage() {}

func (x *ServiceMesh_HttpFilter_JwtAuthn_FromHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_HttpFilter_JwtAuthn_FromHeader.ProtoReflect.Descriptor instead.
func (*ServiceMesh_HttpFilter_JwtAuthn_FromHeader) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 1, 3, 2}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_FromHeader) GetHeaderName() string {
	if x != nil {
		return x.HeaderName
	}
	return ""
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_FromHeader) GetValuePrefix() string {
	if x != nil {
		return x.ValuePrefix
	}
	return ""
}

type ServiceMesh_HttpFilter_JwtAuthn_Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderName   string                                           `protobuf:"bytes,1,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	Forward        bool                                             `protobuf:"varint,2,opt,name=forward,proto3" json:"forward,omitempty"`
	Issuer         string                                           `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Audiences      []string                                         `protobuf:"bytes,4,rep,name=audiences,proto3" json:"audiences,omitempty"`
	RemoteJwks     *ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks      `protobuf:"bytes,5,opt,name=remote_jwks,json=remoteJwks,proto3" json:"remote_jwks,omitempty"`
	ClaimToHeaders []*ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader `protobuf:"bytes,6,rep,name=claim_to_headers,json=claimToHeaders,proto3" json:"claim_to_headers,omitempty"`
	FromHeaders    []*ServiceMesh_HttpFilter_JwtAuthn_FromHeader    `protobuf:"bytes,7,rep,name=from_headers,json=fromHeaders,proto3" json:"from_headers,omitempty"`
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Provider) Reset() {
	*x = ServiceMesh_HttpFilter_JwtAuthn_Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_HttpFilter_JwtAuthn_Provider) ProtoMessage() {}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Provider) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_HttpFilter_JwtAuthn_Provider.ProtoReflect.Descriptor instead.
func (*ServiceMesh_HttpFilter_JwtAuthn_Provider) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 1, 3, 3}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Provider) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Provider) GetForward() bool {
	if x != nil {
		return x.Forward
	}
	return false
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Provider) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Provider) GetAudiences() []string {
	if x != nil {
		return x.Audiences
	}
	return nil
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Provider) GetRemoteJwks() *ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks {
	if x != nil {
		return x.RemoteJwks
	}
	return nil
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Provider) GetClaimToHeaders() []*ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader {
	if x != nil {
		return x.ClaimToHeaders
	}
	return nil
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Provider) GetFromHeaders() []*ServiceMesh_HttpFilter_JwtAuthn_FromHeader {
	if x != nil {
		return x.FromHeaders
	}
	return nil
}

type ServiceMesh_HttpFilter_JwtAuthn_Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchPrefix            string   `protobuf:"bytes,1,opt,name=match_prefix,json=matchPrefix,proto3" json:"match_prefix,omitempty"`
	RequiredProvidersNames []string `protobuf:"bytes,2,rep,name=required_providers_names,json=requiredProvidersNames,proto3" json:"required_providers_names,omitempty"`
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Rule) Reset() {
	*x = ServiceMesh_HttpFilter_JwtAuthn_Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_HttpFilter_JwtAuthn_Rule) ProtoMessage() {}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_HttpFilter_JwtAuthn_Rule.ProtoReflect.Descriptor instead.
func (*ServiceMesh_HttpFilter_JwtAuthn_Rule) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 1, 3, 4}
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Rule) GetMatchPrefix() string {
	if x != nil {
		return x.MatchPrefix
	}
	return ""
}

func (x *ServiceMesh_HttpFilter_JwtAuthn_Rule) GetRequiredProvidersNames() []string {
	if x != nil {
		return x.RequiredProvidersNames
	}
	return nil
}

type ServiceMesh_Service_Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for this instance
	Hostname          string                        `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	TransportProtocol ServiceMesh_TransportProtocol `protobuf:"varint,2,opt,name=transport_protocol,json=transportProtocol,proto3,enum=graviflow.api.types.v1.ServiceMesh_TransportProtocol" json:"transport_protocol,omitempty"`
	Address           string                        `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Port              int32                         `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ServiceMesh_Service_Instance) Reset() {
	*x = ServiceMesh_Service_Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_Service_Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_Service_Instance) ProtoMessage() {}

func (x *ServiceMesh_Service_Instance) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_Service_Instance.ProtoReflect.Descriptor instead.
func (*ServiceMesh_Service_Instance) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *ServiceMesh_Service_Instance) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ServiceMesh_Service_Instance) GetTransportProtocol() ServiceMesh_TransportProtocol {
	if x != nil {
		return x.TransportProtocol
	}
	return ServiceMesh_TRANSPORT_PROTOCOL_UNDEFINED
}

func (x *ServiceMesh_Service_Instance) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ServiceMesh_Service_Instance) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ServiceMesh_RoutingPolicy_Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchPrefix   string               `protobuf:"bytes,1,opt,name=match_prefix,json=matchPrefix,proto3" json:"match_prefix,omitempty"`
	TargetCluster string               `protobuf:"bytes,2,opt,name=target_cluster,json=targetCluster,proto3" json:"target_cluster,omitempty"`
	Timeout       *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *ServiceMesh_RoutingPolicy_Route) Reset() {
	*x = ServiceMesh_RoutingPolicy_Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_RoutingPolicy_Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_RoutingPolicy_Route) ProtoMessage() {}

func (x *ServiceMesh_RoutingPolicy_Route) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_RoutingPolicy_Route.ProtoReflect.Descriptor instead.
func (*ServiceMesh_RoutingPolicy_Route) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *ServiceMesh_RoutingPolicy_Route) GetMatchPrefix() string {
	if x != nil {
		return x.MatchPrefix
	}
	return ""
}

func (x *ServiceMesh_RoutingPolicy_Route) GetTargetCluster() string {
	if x != nil {
		return x.TargetCluster
	}
	return ""
}

func (x *ServiceMesh_RoutingPolicy_Route) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type ServiceMesh_RoutingPolicy_Cors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowOriginStringMatchPrefix []string             `protobuf:"bytes,1,rep,name=allow_origin_string_match_prefix,json=allowOriginStringMatchPrefix,proto3" json:"allow_origin_string_match_prefix,omitempty"`
	AllowMethods                 []string             `protobuf:"bytes,2,rep,name=allow_methods,json=allowMethods,proto3" json:"allow_methods,omitempty"`
	AllowHeaders                 []string             `protobuf:"bytes,3,rep,name=allow_headers,json=allowHeaders,proto3" json:"allow_headers,omitempty"`
	ExposeHeaders                []string             `protobuf:"bytes,4,rep,name=expose_headers,json=exposeHeaders,proto3" json:"expose_headers,omitempty"`
	MaxAge                       *durationpb.Duration `protobuf:"bytes,5,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
}

func (x *ServiceMesh_RoutingPolicy_Cors) Reset() {
	*x = ServiceMesh_RoutingPolicy_Cors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_types_v1_service_mesh_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMesh_RoutingPolicy_Cors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMesh_RoutingPolicy_Cors) ProtoMessage() {}

func (x *ServiceMesh_RoutingPolicy_Cors) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_v1_service_mesh_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMesh_RoutingPolicy_Cors.ProtoReflect.Descriptor instead.
func (*ServiceMesh_RoutingPolicy_Cors) Descriptor() ([]byte, []int) {
	return file_api_types_v1_service_mesh_proto_rawDescGZIP(), []int{0, 6, 1}
}

func (x *ServiceMesh_RoutingPolicy_Cors) GetAllowOriginStringMatchPrefix() []string {
	if x != nil {
		return x.AllowOriginStringMatchPrefix
	}
	return nil
}

func (x *ServiceMesh_RoutingPolicy_Cors) GetAllowMethods() []string {
	if x != nil {
		return x.AllowMethods
	}
	return nil
}

func (x *ServiceMesh_RoutingPolicy_Cors) GetAllowHeaders() []string {
	if x != nil {
		return x.AllowHeaders
	}
	return nil
}

func (x *ServiceMesh_RoutingPolicy_Cors) GetExposeHeaders() []string {
	if x != nil {
		return x.ExposeHeaders
	}
	return nil
}

func (x *ServiceMesh_RoutingPolicy_Cors) GetMaxAge() *durationpb.Duration {
	if x != nil {
		return x.MaxAge
	}
	return nil
}

var File_api_types_v1_service_mesh_proto protoreflect.FileDescriptor

var file_api_types_v1_service_mesh_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x16, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x1d, 0x0a, 0x0b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x1a, 0x89, 0x02, 0x0a, 0x04, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x54, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x48, 0x74,
	0x74, 0x70, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x68, 0x74, 0x74,
	0x70, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x72, 0x61, 0x76,
	0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5a, 0x0a, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x72, 0x61, 0x76,
	0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x48, 0x00, 0x52, 0x0d,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x42, 0x06, 0x0a,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x1a, 0xae, 0x0b, 0x0a, 0x0a, 0x48, 0x74, 0x74, 0x70, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x72, 0x73, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x73, 0x12,
	0x5f, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x48, 0x00, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x53, 0x0a, 0x08, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x77, 0x65, 0x62, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x57, 0x65, 0x62, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72,
	0x70, 0x63, 0x57, 0x65, 0x62, 0x12, 0x56, 0x0a, 0x09, 0x6a, 0x77, 0x74, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x48, 0x74,
	0x74, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4a, 0x77, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x6e, 0x48, 0x00, 0x52, 0x08, 0x6a, 0x77, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x1a, 0x21, 0x0a,
	0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x1a, 0x06, 0x0a, 0x04, 0x43, 0x6f, 0x72, 0x73, 0x1a, 0x09, 0x0a, 0x07, 0x47, 0x72, 0x70, 0x63,
	0x57, 0x65, 0x62, 0x1a, 0x86, 0x08, 0x0a, 0x08, 0x4a, 0x77, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6e,
	0x12, 0x5e, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x2e, 0x4a, 0x77, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x52, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x73, 0x68, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e,
	0x4a, 0x77, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x1a, 0x4f, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x6f, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x7f, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4a,
	0x77, 0x6b, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70, 0x55, 0x72, 0x69, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0x50, 0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x1a, 0xbc, 0x03, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x63, 0x0a, 0x0b, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6a, 0x77, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x42, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x73, 0x68, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e,
	0x4a, 0x77, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4a,
	0x77, 0x6b, 0x73, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4a, 0x77, 0x6b, 0x73, 0x12,
	0x6f, 0x0a, 0x10, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x6f, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x72, 0x61, 0x76,
	0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x48,
	0x74, 0x74, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4a, 0x77, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x6e, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x6f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x6f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x65, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4a, 0x77, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x2e,
	0x46, 0x72, 0x6f, 0x6d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x63, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0xce, 0x01, 0x0a, 0x0b, 0x48, 0x74, 0x74, 0x70, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x78, 0x64, 0x73, 0x5f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x78, 0x64, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x51, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x72, 0x61,
	0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x0e, 0x0a, 0x0c, 0x48, 0x74, 0x74, 0x70, 0x31,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x44, 0x0a, 0x0c, 0x48, 0x74, 0x74, 0x70, 0x32,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x5f, 0x63,
	0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x1a, 0xfe, 0x04,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x09,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x73, 0x68, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x42, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x68, 0x0a, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x68, 0x74, 0x74, 0x70, 0x31, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x31, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x48, 0x74, 0x74, 0x70, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x68,
	0x0a, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x32,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x65, 0x73, 0x68, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x32, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x00, 0x52, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x74, 0x74, 0x70,
	0x32, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xba, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x64, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65,
	0x73, 0x68, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x27, 0x0a, 0x25, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xf6,
	0x04, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x4f, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x43, 0x6f, 0x72, 0x73, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x73, 0x12, 0x28,
	0x0a, 0x10, 0x78, 0x64, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x78, 0x64, 0x73, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x86, 0x01, 0x0a, 0x05, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x1a, 0xf3, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x72, 0x73, 0x12, 0x46, 0x0a, 0x20, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x1c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x1a, 0x78, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12,
	0x68, 0x0a, 0x14, 0x61, 0x77, 0x73, 0x5f, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65,
	0x73, 0x68, 0x2e, 0x41, 0x77, 0x73, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x47, 0x72, 0x70, 0x63,
	0x45, 0x64, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x61, 0x77, 0x73, 0x4c, 0x61, 0x6d, 0x62, 0x64,
	0x61, 0x47, 0x72, 0x70, 0x63, 0x45, 0x64, 0x67, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x65, 0x64, 0x67,
	0x65, 0x1a, 0x80, 0x01, 0x0a, 0x11, 0x41, 0x77, 0x73, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x47,
	0x72, 0x70, 0x63, 0x45, 0x64, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x75, 0x6c, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x66, 0x75, 0x6c, 0x6c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f,
	0x4c, 0x5f, 0x54, 0x43, 0x50, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x44,
	0x50, 0x10, 0x02, 0x22, 0x79, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x50,
	0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e,
	0x0a, 0x1a, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x31, 0x10, 0x01, 0x12, 0x1e,
	0x0a, 0x1a, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x32, 0x10, 0x02, 0x42, 0xec,
	0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x41, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x6f, 0x6d, 0x77, 0x6d, 0x2f, 0x70, 0x6f, 0x6d, 0x2d, 0x74, 0x65, 0x63, 0x68, 0x2f,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x47, 0x41, 0x54, 0xaa, 0x02, 0x16, 0x47, 0x72, 0x61,
	0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x16, 0x47, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x5c,
	0x41, 0x70, 0x69, 0x5c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x22, 0x47,
	0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x19, 0x47, 0x72, 0x61, 0x76, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x3a, 0x3a, 0x41,
	0x70, 0x69, 0x3a, 0x3a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_types_v1_service_mesh_proto_rawDescOnce sync.Once
	file_api_types_v1_service_mesh_proto_rawDescData = file_api_types_v1_service_mesh_proto_rawDesc
)

func file_api_types_v1_service_mesh_proto_rawDescGZIP() []byte {
	file_api_types_v1_service_mesh_proto_rawDescOnce.Do(func() {
		file_api_types_v1_service_mesh_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_types_v1_service_mesh_proto_rawDescData)
	})
	return file_api_types_v1_service_mesh_proto_rawDescData
}

var file_api_types_v1_service_mesh_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_types_v1_service_mesh_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_types_v1_service_mesh_proto_goTypes = []interface{}{
	(ServiceMesh_TransportProtocol)(0),                    // 0: graviflow.api.types.v1.ServiceMesh.TransportProtocol
	(ServiceMesh_ApplicationProtocol)(0),                  // 1: graviflow.api.types.v1.ServiceMesh.ApplicationProtocol
	(*ServiceMesh)(nil),                                   // 2: graviflow.api.types.v1.ServiceMesh
	(*ServiceMesh_Node)(nil),                              // 3: graviflow.api.types.v1.ServiceMesh.Node
	(*ServiceMesh_HttpFilter)(nil),                        // 4: graviflow.api.types.v1.ServiceMesh.HttpFilter
	(*ServiceMesh_HttpIngress)(nil),                       // 5: graviflow.api.types.v1.ServiceMesh.HttpIngress
	(*ServiceMesh_Http1Options)(nil),                      // 6: graviflow.api.types.v1.ServiceMesh.Http1Options
	(*ServiceMesh_Http2Options)(nil),                      // 7: graviflow.api.types.v1.ServiceMesh.Http2Options
	(*ServiceMesh_Service)(nil),                           // 8: graviflow.api.types.v1.ServiceMesh.Service
	(*ServiceMesh_RoutingPolicy)(nil),                     // 9: graviflow.api.types.v1.ServiceMesh.RoutingPolicy
	(*ServiceMesh_Edge)(nil),                              // 10: graviflow.api.types.v1.ServiceMesh.Edge
	(*ServiceMesh_AwsLambdaGrpcEdge)(nil),                 // 11: graviflow.api.types.v1.ServiceMesh.AwsLambdaGrpcEdge
	(*ServiceMesh_HttpFilter_HealthCheck)(nil),            // 12: graviflow.api.types.v1.ServiceMesh.HttpFilter.HealthCheck
	(*ServiceMesh_HttpFilter_Cors)(nil),                   // 13: graviflow.api.types.v1.ServiceMesh.HttpFilter.Cors
	(*ServiceMesh_HttpFilter_GrpcWeb)(nil),                // 14: graviflow.api.types.v1.ServiceMesh.HttpFilter.GrpcWeb
	(*ServiceMesh_HttpFilter_JwtAuthn)(nil),               // 15: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn
	(*ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader)(nil), // 16: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.ClaimToHeader
	(*ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks)(nil),    // 17: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.RemoteJwks
	(*ServiceMesh_HttpFilter_JwtAuthn_FromHeader)(nil),    // 18: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.FromHeader
	(*ServiceMesh_HttpFilter_JwtAuthn_Provider)(nil),      // 19: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.Provider
	(*ServiceMesh_HttpFilter_JwtAuthn_Rule)(nil),          // 20: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.Rule
	(*ServiceMesh_Service_Instance)(nil),                  // 21: graviflow.api.types.v1.ServiceMesh.Service.Instance
	(*ServiceMesh_RoutingPolicy_Route)(nil),               // 22: graviflow.api.types.v1.ServiceMesh.RoutingPolicy.Route
	(*ServiceMesh_RoutingPolicy_Cors)(nil),                // 23: graviflow.api.types.v1.ServiceMesh.RoutingPolicy.Cors
	(*durationpb.Duration)(nil),                           // 24: google.protobuf.Duration
}
var file_api_types_v1_service_mesh_proto_depIdxs = []int32{
	5,  // 0: graviflow.api.types.v1.ServiceMesh.Node.http_ingress:type_name -> graviflow.api.types.v1.ServiceMesh.HttpIngress
	8,  // 1: graviflow.api.types.v1.ServiceMesh.Node.service:type_name -> graviflow.api.types.v1.ServiceMesh.Service
	9,  // 2: graviflow.api.types.v1.ServiceMesh.Node.routing_policy:type_name -> graviflow.api.types.v1.ServiceMesh.RoutingPolicy
	13, // 3: graviflow.api.types.v1.ServiceMesh.HttpFilter.cors:type_name -> graviflow.api.types.v1.ServiceMesh.HttpFilter.Cors
	12, // 4: graviflow.api.types.v1.ServiceMesh.HttpFilter.health_check:type_name -> graviflow.api.types.v1.ServiceMesh.HttpFilter.HealthCheck
	14, // 5: graviflow.api.types.v1.ServiceMesh.HttpFilter.grpc_web:type_name -> graviflow.api.types.v1.ServiceMesh.HttpFilter.GrpcWeb
	15, // 6: graviflow.api.types.v1.ServiceMesh.HttpFilter.jwt_authn:type_name -> graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn
	4,  // 7: graviflow.api.types.v1.ServiceMesh.HttpIngress.http_filters:type_name -> graviflow.api.types.v1.ServiceMesh.HttpFilter
	21, // 8: graviflow.api.types.v1.ServiceMesh.Service.instances:type_name -> graviflow.api.types.v1.ServiceMesh.Service.Instance
	24, // 9: graviflow.api.types.v1.ServiceMesh.Service.connect_timeout:type_name -> google.protobuf.Duration
	6,  // 10: graviflow.api.types.v1.ServiceMesh.Service.instance_http1_options:type_name -> graviflow.api.types.v1.ServiceMesh.Http1Options
	7,  // 11: graviflow.api.types.v1.ServiceMesh.Service.instance_http2_options:type_name -> graviflow.api.types.v1.ServiceMesh.Http2Options
	22, // 12: graviflow.api.types.v1.ServiceMesh.RoutingPolicy.routes:type_name -> graviflow.api.types.v1.ServiceMesh.RoutingPolicy.Route
	23, // 13: graviflow.api.types.v1.ServiceMesh.RoutingPolicy.cors:type_name -> graviflow.api.types.v1.ServiceMesh.RoutingPolicy.Cors
	11, // 14: graviflow.api.types.v1.ServiceMesh.Edge.aws_lambda_grpc_edge:type_name -> graviflow.api.types.v1.ServiceMesh.AwsLambdaGrpcEdge
	19, // 15: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.providers:type_name -> graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.Provider
	20, // 16: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.rules:type_name -> graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.Rule
	24, // 17: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.RemoteJwks.timeout:type_name -> google.protobuf.Duration
	17, // 18: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.Provider.remote_jwks:type_name -> graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.RemoteJwks
	16, // 19: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.Provider.claim_to_headers:type_name -> graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.ClaimToHeader
	18, // 20: graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.Provider.from_headers:type_name -> graviflow.api.types.v1.ServiceMesh.HttpFilter.JwtAuthn.FromHeader
	0,  // 21: graviflow.api.types.v1.ServiceMesh.Service.Instance.transport_protocol:type_name -> graviflow.api.types.v1.ServiceMesh.TransportProtocol
	24, // 22: graviflow.api.types.v1.ServiceMesh.RoutingPolicy.Route.timeout:type_name -> google.protobuf.Duration
	24, // 23: graviflow.api.types.v1.ServiceMesh.RoutingPolicy.Cors.max_age:type_name -> google.protobuf.Duration
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_api_types_v1_service_mesh_proto_init() }
func file_api_types_v1_service_mesh_proto_init() {
	if File_api_types_v1_service_mesh_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_types_v1_service_mesh_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_HttpFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_HttpIngress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_Http1Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_Http2Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_RoutingPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_AwsLambdaGrpcEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_HttpFilter_HealthCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_HttpFilter_Cors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_HttpFilter_GrpcWeb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_HttpFilter_JwtAuthn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_HttpFilter_JwtAuthn_ClaimToHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_HttpFilter_JwtAuthn_RemoteJwks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_HttpFilter_JwtAuthn_FromHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_HttpFilter_JwtAuthn_Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_HttpFilter_JwtAuthn_Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_Service_Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_RoutingPolicy_Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_types_v1_service_mesh_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMesh_RoutingPolicy_Cors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_types_v1_service_mesh_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ServiceMesh_Node_HttpIngress)(nil),
		(*ServiceMesh_Node_Service)(nil),
		(*ServiceMesh_Node_RoutingPolicy)(nil),
	}
	file_api_types_v1_service_mesh_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ServiceMesh_HttpFilter_Cors_)(nil),
		(*ServiceMesh_HttpFilter_HealthCheck_)(nil),
		(*ServiceMesh_HttpFilter_GrpcWeb_)(nil),
		(*ServiceMesh_HttpFilter_JwtAuthn_)(nil),
	}
	file_api_types_v1_service_mesh_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ServiceMesh_Service_InstanceHttp1Options)(nil),
		(*ServiceMesh_Service_InstanceHttp2Options)(nil),
	}
	file_api_types_v1_service_mesh_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ServiceMesh_Edge_AwsLambdaGrpcEdge)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_types_v1_service_mesh_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_types_v1_service_mesh_proto_goTypes,
		DependencyIndexes: file_api_types_v1_service_mesh_proto_depIdxs,
		EnumInfos:         file_api_types_v1_service_mesh_proto_enumTypes,
		MessageInfos:      file_api_types_v1_service_mesh_proto_msgTypes,
	}.Build()
	File_api_types_v1_service_mesh_proto = out.File
	file_api_types_v1_service_mesh_proto_rawDesc = nil
	file_api_types_v1_service_mesh_proto_goTypes = nil
	file_api_types_v1_service_mesh_proto_depIdxs = nil
}
